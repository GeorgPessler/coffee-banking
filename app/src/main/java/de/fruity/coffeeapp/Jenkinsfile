package de.fruity.coffeeapp

pipeline {
    agent {
        label 'w76w054'
    }
    stages {
        stage('Regression-test on Windows') {
            steps {
                throttle(['Updatetest'])
                bat 'tools\\usbpowerswitch\\cleware\\USBswitchCmd.exe 0'
                echo "run main.py .."
                bat 'tools\\PortablePython3\\python.exe main.py --power_switch 63005 --hiladapter_port COM7 --keyboard_port COM9'
            }
            post {
                always {
                    junit '**/updatetest-reports/*.xml'
                }
                failure {
                    // Notify developer team of the failure
                    mail to: 'android-devs@example.com', subject: 'Oops!', body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
                }
            }
        }

		/*stage('Plot') {
            agent {
                label 'w76w054'
            }
			steps {
				bat 'tools\PortablePython3\python.exe extractTimePlotData.py'
				echo "run plot.py .."
				bat 'tools\PortablePython3\python.exe plot.py -m 30'
				plot csvFileName: 'plot-b46ddde6-db4b-4c5c-ab67-4a40803b5abd.csv', 
				csvSeries: [[
					displayTableFlag: false,
					exclusionValues: 'Test021DatabaseRestoreXmlApi00,Test023DatabaseGetBackupXmlApi00,Test024DatabaseGetDataXmlApi02,Test026DatabaseSetOnlyData00',
					file: 'timePlotRef_1.8.2.csv', 
					inclusionFlag: 'INCLUDE_BY_STRING', 
					url: ''
				]], 
				exclZero: false, 
				group: 'DB_performance', 
				keepRecords: false, 
				logarithmic: false, 
				numBuilds: '', 
				style: 'line', 
				title: 'custom_1000objects', 
				useDescr: false, 
				yaxis: '', 
				yaxisMaximum: '', 
				yaxisMinimum: ''
				
				publishHTML([
					allowMissing: false,
					alwaysLinkToLastBuild: false,
					keepAll: false, 
					reportDir: 'HTML_Report', 
					reportFiles: 'timePlot.html', 
					reportName: 'HTML Report', 
					reportTitles: ''
					])
			}
		}
		*/
    }
}
